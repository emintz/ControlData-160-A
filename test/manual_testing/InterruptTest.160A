          REM    Copyright Â© 2025 The System Source Museum, the authors
          REM    and maintainers, and others

          REM    This file is part of the System Source Museum Control
          REM    Data 160-A Emulator.

          REM    The System Source Museum Control Data 160-A Emulator is
          REM    free software: you can redistribute it and/or modify it
          REM    under the terms of the GNU General Public License as
          REM    published by the Free Software Foundation, either version
          REM    3 of the License, or (at your option) any later version.

          REM    The System Source Museum Control Data 160-A Emulator
          REM    is distributed in the hope that it will be useful,
          REM    but WITHOUT ANY WARRANTY; without even the implied
          REM    warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
          REM    PURPOSE. See the GNU General Public License for more details.

          REM    You should have received a copy of the GNU General Public
          REM    License along with the System Source Museum Control Data
          REM    160-A Emulator. If not, see <https://www.gnu.org/licenses/.
          REM
          REM    Script for testing the console interrupt. The
          REM    script loops until the operator turns a jump switch
          REM    and a stop switch down to generate an interrupt 10
          REM
          REM Memory Banks
          REM    Buffer: 0
          REM    Direct: 1
          REM    Indirect: 2
          REM    Relative: 3
          REM
          REM Interrupt 10 handler starts at 11(r) == 11(3)
          BNK 3
          ORG 11
          JFI 1     Jump to the address in the next word
          OCT 200   Interrupt address starts at 200

          REM Main program: loop until [A] != 0
          ORG 100
          LDN 0
          NOP
          ZJB 1     A will contain 0 until the interrupt handler runs
          HLT

          REM Interrupt handler
          ORG 200
          LDN 1     1 -> A
          CIL       We done. Clear interrupt lock.
          JPI 10    Back to the main program

          REM Bank and starting address settings
          SETB 0      Buffer bank: 0
          SETD 1      Direct bank: 1
          SETI 2      Indirect bank: 2
          SETR 3      Relative bank: 3
          SETP 100    Starting address: 100(3)
          END
